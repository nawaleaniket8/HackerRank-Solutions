import java.io.*;
import java.util.*;
import java.util.stream.Collectors;
import java.util.stream.Stream;

class Result {

    /*
     * Complete the 'miniMaxSum' function below.
     *
     * The function accepts INTEGER_ARRAY arr as parameter.
     */

    public static void miniMaxSum(List<Integer> arr) {
        // Sort the array in ascending order
        Collections.sort(arr);

        // Calculate the minimum sum by summing the first four elements
        long minSum = 0;
        for (int i = 0; i < 4; i++) {
            minSum += arr.get(i);
        }

        // Calculate the maximum sum by summing the last four elements
        long maxSum = 0;
        for (int i = 1; i < 5; i++) {
            maxSum += arr.get(i);
        }

        // Print the minimum and maximum sums
        System.out.println(minSum + " " + maxSum);
    }
}

public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));

        // Read the input as a line of integers and convert it to a list of integers
        List<Integer> arr = Stream.of(bufferedReader.readLine().replaceAll("\\s+$", "").split(" "))
            .map(Integer::parseInt)
            .collect(Collectors.toList());

        // Call the miniMaxSum function with the input array
        Result.miniMaxSum(arr);

        bufferedReader.close();
    }
}


//code by Aniket Chandrakant Nawale
